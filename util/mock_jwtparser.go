// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/causalfoundry/utils/util (interfaces: JwtParser)

// Package util is a generated GoMock package.
package util

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJwtParser is a mock of JwtParser interface.
type MockJwtParser struct {
	ctrl     *gomock.Controller
	recorder *MockJwtParserMockRecorder
}

// MockJwtParserMockRecorder is the mock recorder for MockJwtParser.
type MockJwtParserMockRecorder struct {
	mock *MockJwtParser
}

// NewMockJwtParser creates a new mock instance.
func NewMockJwtParser(ctrl *gomock.Controller) *MockJwtParser {
	mock := &MockJwtParser{ctrl: ctrl}
	mock.recorder = &MockJwtParserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJwtParser) EXPECT() *MockJwtParserMockRecorder {
	return m.recorder
}

// TokenToPayload mocks base method.
func (m *MockJwtParser) TokenToPayload(arg0 string) (UserPayload, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TokenToPayload", arg0)
	ret0, _ := ret[0].(UserPayload)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TokenToPayload indicates an expected call of TokenToPayload.
func (mr *MockJwtParserMockRecorder) TokenToPayload(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TokenToPayload", reflect.TypeOf((*MockJwtParser)(nil).TokenToPayload), arg0)
}
